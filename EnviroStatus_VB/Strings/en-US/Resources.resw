<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="_lang" xml:space="preserve">
    <value>EN</value>
  </data>
  <data name="uiTitle.Text" xml:space="preserve">
    <value>Smog Meter</value>
  </data>
  <data name="uiGoDetails.Text" xml:space="preserve">
    <value>Details...</value>
  </data>
  <data name="uiRefresh.Label" xml:space="preserve">
    <value>Show</value>
  </data>
  <data name="uiAdd.Text" xml:space="preserve">
    <value>Store as...</value>
  </data>
  <data name="uiGPS.Text" xml:space="preserve">
    <value>GPS</value>
  </data>
  <data name="uiSettings.Label" xml:space="preserve">
    <value>Settings</value>
  </data>
  <data name="uiSettingsTitle.Text" xml:space="preserve">
    <value>Settings</value>
  </data>
  <data name="uiSettingsStartLoc.Header" xml:space="preserve">
    <value>Start location</value>
  </data>
  <data name="uiSettingsLiveTile.Header" xml:space="preserve">
    <value>Live (primary) tile</value>
  </data>
  <data name="uiSettingsLiveTileClock.OffContent" xml:space="preserve">
    <value>last position (30 min)</value>
  </data>
  <data name="uiSettingsLiveTileClock.OnContent" xml:space="preserve">
    <value>GPS (60 min)</value>
  </data>
  <data name="uiSettingsAlerty.Header" xml:space="preserve">
    <value>Alerts</value>
  </data>
  <data name="uiSettingsAlertyNone.Content" xml:space="preserve">
    <value>None</value>
  </data>
  <data name="uiSettingsAlertyRok.Content" xml:space="preserve">
    <value>Yearly average (!)</value>
  </data>
  <data name="uiSettingsAlertyGodz.Content" xml:space="preserve">
    <value>hourly average (!!)</value>
  </data>
  <data name="uiSettingsAlerty2Godz.Content" xml:space="preserve">
    <value>2× hourly average (!!!)</value>
  </data>
  <data name="uiSettingsDataLog.Header" xml:space="preserve">
    <value>Log data</value>
  </data>
  <data name="uiSettingsSimulGPS.Content" xml:space="preserve">
    <value>Simulate GPS...</value>
  </data>
  <data name="uiSettingsSave.Content" xml:space="preserve">
    <value>Save!</value>
  </data>
  <data name="errAnyError" xml:space="preserve">
    <value>ERROR</value>
  </data>
  <data name="errNoNet" xml:space="preserve">
    <value>Network is required</value>
  </data>
  <data name="errNoRoamFolder" xml:space="preserve">
    <value>Cannot get data folder</value>
  </data>
  <data name="resDeadTile" xml:space="preserve">
    <value>(no live tile)</value>
  </data>
  <data name="resDlgCancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="resDlgContinue" xml:space="preserve">
    <value>Continue</value>
  </data>
  <data name="resDlgNo" xml:space="preserve">
    <value>No</value>
  </data>
  <data name="resDlgYes" xml:space="preserve">
    <value>Yes</value>
  </data>
  <data name="resNazwa" xml:space="preserve">
    <value>Name of place</value>
  </data>
  <data name="resNoAutostart" xml:space="preserve">
    <value>(no autostart)</value>
  </data>
  <data name="manifestAppName" xml:space="preserve">
    <value>SmogMeter</value>
  </data>
  <data name="resSaveFav" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="uiIntTemp.Header" xml:space="preserve">
    <value>Target temperature (°C)</value>
  </data>
  <data name="uiKubatura.Header" xml:space="preserve">
    <value>Humidity calculator - volume (m³)</value>
  </data>
  <data name="msgWilgInt" xml:space="preserve">
    <value>Humidity inside</value>
  </data>
  <data name="resErrorGettingPos" xml:space="preserve">
    <value>Cannot get location (in timely fashion)</value>
  </data>
  <data name="resErrorNoGPSAllowed" xml:space="preserve">
    <value>Location service is not available. Do I have a permission?</value>
  </data>
  <data name="resNoSensorInRange" xml:space="preserve">
    <value>No sensor in range</value>
  </data>
  <data name="uiSettingsOpenLogs.Content" xml:space="preserve">
    <value>Open folder</value>
  </data>
  <data name="uiLimitWg.OffContent" xml:space="preserve">
    <value>EU limits</value>
  </data>
  <data name="uiLimitWg.OnContent" xml:space="preserve">
    <value>WHO limits</value>
  </data>
  <data name="resCalculated" xml:space="preserve">
    <value>calculated value</value>
  </data>
  <data name="resTempOdczuwana" xml:space="preserve">
    <value>T Αpparent</value>
    <comment>to nie A tylko Alfa</comment>
  </data>
  <data name="uiDataSources.Label" xml:space="preserve">
    <value>Sources</value>
  </data>
  <data name="resImgwMeteo10minOFF" xml:space="preserve">
    <value>Precip 60 min</value>
  </data>
  <data name="resImgwMeteo10minON" xml:space="preserve">
    <value>Precip 10 min</value>
  </data>
  <data name="resPomiarOpad" xml:space="preserve">
    <value>Precip</value>
  </data>
  <data name="resPomiarWind" xml:space="preserve">
    <value>Wind</value>
  </data>
  <data name="msgAllOk" xml:space="preserve">
    <value>Clean air :)</value>
  </data>
  <data name="uiAddSecTile.Text" xml:space="preserve">
    <value>Create tile</value>
  </data>
  <data name="msgForAPIkey" xml:space="preserve">
    <value>For API key, please register</value>
  </data>
  <data name="resPomiarRosa" xml:space="preserve">
    <value>Dew point</value>
  </data>
  <data name="resPomiarWidocz" xml:space="preserve">
    <value>Visibility</value>
  </data>
  <data name="resPomiarZachm" xml:space="preserve">
    <value>Cloud cover</value>
  </data>
  <data name="msgVersion" xml:space="preserve">
    <value>version</value>
  </data>
  <data name="resPomiarAdditSolarWindDensity" xml:space="preserve">
    <value>Solar wind density</value>
  </data>
  <data name="resPomiarAdditSolarWindSpeed" xml:space="preserve">
    <value>Solar wind speed</value>
  </data>
  <data name="resPomiarAdditSolarWindTemp" xml:space="preserve">
    <value>Solar wind temperature</value>
  </data>
  <data name="resPomiarSolarWindDensity" xml:space="preserve">
    <value>SolWind density</value>
  </data>
  <data name="resPomiarSolarWindSpeed" xml:space="preserve">
    <value>SolWind speed</value>
  </data>
  <data name="resPomiarSolarWindTemp" xml:space="preserve">
    <value>SolWind temp</value>
  </data>
  <data name="resPomiarNoaaKindexPredicted" xml:space="preserve">
    <value>Prediction for</value>
  </data>
  <data name="resRAHdailyAvg" xml:space="preserve">
    <value>24 hours average</value>
  </data>
  <data name="uiSettingsSharingTitle.Text" xml:space="preserve">
    <value>Data sharing</value>
  </data>
  <data name="uiSettSharing.Label" xml:space="preserve">
    <value>Sharing</value>
  </data>
  <data name="uiFileCache.Header" xml:space="preserve">
    <value>Save current data</value>
  </data>
  <data name="uiFileCacheRoam.Header" xml:space="preserve">
    <value>Save current data in cloud</value>
  </data>
  <data name="uiRemSysAllowAPIKey.Header" xml:space="preserve">
    <value>Allow other apps to get DarkSky API key</value>
  </data>
  <data name="uiRemSysAllowData.Header" xml:space="preserve">
    <value>Allow other apps to get cached data</value>
  </data>
  <data name="uiDelToastOnOpen.Header" xml:space="preserve">
    <value>Delete toasts on opening app</value>
  </data>
  <data name="msgCopyDetails" xml:space="preserve">
    <value>Copy</value>
  </data>
  <data name="resImgwHydroAllOFF" xml:space="preserve">
    <value>Nearest river</value>
  </data>
  <data name="resImgwHydroAllON" xml:space="preserve">
    <value>All rivers in range</value>
  </data>
  <data name="resGlebokosc" xml:space="preserve">
    <value>depth</value>
  </data>
  <data name="resSeismicEU_All" xml:space="preserve">
    <value>Sum of all</value>
  </data>
  <data name="resSeismicEU_DistAll" xml:space="preserve">
    <value>All</value>
  </data>
  <data name="resSeismicEU_Max" xml:space="preserve">
    <value>Only one quake (max)</value>
  </data>
  <data name="resSeismicEU_SldHdr" xml:space="preserve">
    <value>Quake range</value>
  </data>
  <data name="resWysokosc" xml:space="preserve">
    <value>altitude</value>
  </data>
  <data name="uiMapInstruction.Text" xml:space="preserve">
    <value>Choose location (long tap)</value>
  </data>
</root>